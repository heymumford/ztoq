name: Migration Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'ztoq/migration.py'
      - 'tests/unit/test_migration.py'
      - 'tests/integration/test_migration*.py'
      - 'ztoq/qtest_*.py'
      - 'ztoq/zephyr_*.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'ztoq/migration.py'
      - 'tests/unit/test_migration.py'
      - 'tests/integration/test_migration*.py'
      - 'ztoq/qtest_*.py'
      - 'ztoq/zephyr_*.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  migration-tests:
    name: Migration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run migration unit tests
        run: |
          poetry run pytest tests/unit/test_migration.py -v --cov=ztoq.migration --cov-report=xml:migration-coverage.xml --cov-report=html:migration-htmlcov

      - name: Run migration integration tests
        run: |
          poetry run pytest tests/integration/test_migration*.py -v
        continue-on-error: true

      - name: Upload test coverage report
        uses: actions/upload-artifact@v3
        with:
          name: migration-coverage-report
          path: |
            migration-coverage.xml
            migration-htmlcov

  migration-batch-tests:
    name: Migration Batch Processing Tests
    runs-on: ubuntu-latest
    needs: migration-tests
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Setup PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '14'
          postgresql db: 'ztoq_test'
          postgresql user: 'ztoq_user'
          postgresql password: 'ztoq_password'

      - name: Run batch processing tests
        run: |
          # Set environment variables for PostgreSQL connection
          export ZTOQ_DB_TYPE=postgresql
          export ZTOQ_DB_HOST=localhost
          export ZTOQ_DB_PORT=5432
          export ZTOQ_DB_NAME=ztoq_test
          export ZTOQ_DB_USER=ztoq_user
          export ZTOQ_DB_PASSWORD=ztoq_password

          # Run tests with PostgreSQL backend
          poetry run pytest tests/unit/test_migration.py::TestEntityBatchTracker -v

      - name: Run large dataset simulation
        run: |
          # Run the batch performance test
          poetry run python -m ztoq.migration --test-batch-performance --batch-size=100 --entities=1000
        continue-on-error: true

  update-badge:
    name: Update Test Badge
    runs-on: ubuntu-latest
    needs: [migration-tests, migration-batch-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Download coverage report
        uses: actions/download-artifact@v3
        with:
          name: migration-coverage-report

      - name: Extract coverage percentage
        run: |
          COVERAGE=$(grep -Po '(?<=<coverage line-rate=")[^"]*' migration-coverage.xml)
          COVERAGE_PCT=$(echo "scale=2; $COVERAGE * 100" | bc)
          echo "COVERAGE_PCT=$COVERAGE_PCT" >> $GITHUB_ENV

      - name: Generate Badge JSON
        run: |
          cat > docs/badges/migration_tests.json << EOF
          {
            "schemaVersion": 1,
            "label": "migration test coverage",
            "message": "${{ env.COVERAGE_PCT }}%",
            "color": "$(if (( $(echo "${{ env.COVERAGE_PCT }} >= 80" | bc -l) )); then echo "green"; elif (( $(echo "${{ env.COVERAGE_PCT }} >= 60" | bc -l) )); then echo "yellow"; else echo "red"; fi)"
          }
          EOF

      - name: Commit badge update
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update migration test coverage badge [skip ci]"
          file_pattern: docs/badges/migration_tests.json
