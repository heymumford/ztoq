"""initial_schema

Revision ID: a16c4721be8a
Revises:
Create Date: 2025-04-13 21:59:34.884711

"""
from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "a16c4721be8a"
down_revision: str | None = None
branch_labels: str | (Sequence[str] | None) = None
depends_on: str | (Sequence[str] | None) = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attachments",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("content_type", sa.String(length=100), nullable=False),
        sa.Column("size", sa.Integer(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("content", sa.LargeBinary(), nullable=True),
        sa.Column("content_url", sa.String(length=2000), nullable=True),
        sa.Column(
            "entity_type",
            sa.Enum(
                "TEST_CASE",
                "TEST_EXECUTION",
                "TEST_STEP",
                "TEST_CYCLE",
                "TEST_PLAN",
                "FOLDER",
                name="entitytype",
            ),
            nullable=False,
        ),
        sa.Column("entity_id", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_attachment_entity", "attachments", ["entity_type", "entity_id"], unique=False
    )
    op.create_table(
        "case_versions",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "entity_batch_state",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.Column("entity_type", sa.String(length=50), nullable=False),
        sa.Column("batch_number", sa.Integer(), nullable=False),
        sa.Column("total_batches", sa.Integer(), nullable=True),
        sa.Column("items_count", sa.Integer(), nullable=True),
        sa.Column("processed_count", sa.Integer(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("project_key", "entity_type", "batch_number", name="uq_entity_batch"),
    )
    op.create_index("idx_entity_batch_project", "entity_batch_state", ["project_key"], unique=False)
    op.create_index("idx_entity_batch_status", "entity_batch_state", ["status"], unique=False)
    op.create_index(
        op.f("ix_entity_batch_state_project_key"),
        "entity_batch_state",
        ["project_key"],
        unique=False,
    )
    op.create_table(
        "labels",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_labels_name"), "labels", ["name"], unique=True)
    op.create_table(
        "links",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("url", sa.String(length=2000), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column(
            "entity_type",
            sa.Enum(
                "TEST_CASE",
                "TEST_EXECUTION",
                "TEST_STEP",
                "TEST_CYCLE",
                "TEST_PLAN",
                "FOLDER",
                name="entitytype",
            ),
            nullable=False,
        ),
        sa.Column("entity_id", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_link_entity", "links", ["entity_type", "entity_id"], unique=False)
    op.create_table(
        "migration_state",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("project_key", sa.String(length=50), nullable=True),
        sa.Column("extraction_status", sa.String(length=50), nullable=True),
        sa.Column("transformation_status", sa.String(length=50), nullable=True),
        sa.Column("loading_status", sa.String(length=50), nullable=True),
        sa.Column("last_updated", sa.DateTime(), nullable=True),
        sa.Column("error_message", sa.Text(), nullable=True),
        sa.Column("meta_data", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_migration_state_project_key"), "migration_state", ["project_key"], unique=True
    )
    op.create_table(
        "projects",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("key", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_projects_key"), "projects", ["key"], unique=True)
    op.create_table(
        "custom_field_definitions",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_custom_field_project", "custom_field_definitions", ["project_key"], unique=False
    )
    op.create_table(
        "environments",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_environment_project", "environments", ["project_key"], unique=False)
    op.create_table(
        "folders",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("folder_type", sa.String(length=50), nullable=False),
        sa.Column("parent_id", sa.String(length=50), nullable=True),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["folders.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_folder_parent", "folders", ["parent_id"], unique=False)
    op.create_index("idx_folder_project", "folders", ["project_key"], unique=False)
    op.create_table(
        "priorities",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("color", sa.String(length=20), nullable=True),
        sa.Column("rank", sa.Integer(), nullable=False),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_priority_project", "priorities", ["project_key"], unique=False)
    op.create_index("idx_priority_rank", "priorities", ["rank"], unique=False)
    op.create_table(
        "statuses",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("color", sa.String(length=20), nullable=True),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_status_project", "statuses", ["project_key"], unique=False)
    op.create_index("idx_status_type", "statuses", ["type"], unique=False)
    op.create_table(
        "custom_field_values",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("field_id", sa.String(length=50), nullable=False),
        sa.Column(
            "entity_type",
            sa.Enum(
                "TEST_CASE",
                "TEST_EXECUTION",
                "TEST_STEP",
                "TEST_CYCLE",
                "TEST_PLAN",
                "FOLDER",
                name="entitytype",
            ),
            nullable=False,
        ),
        sa.Column("entity_id", sa.String(length=50), nullable=False),
        sa.Column("value_text", sa.Text(), nullable=True),
        sa.Column("value_numeric", sa.Float(), nullable=True),
        sa.Column("value_boolean", sa.Boolean(), nullable=True),
        sa.Column("value_date", sa.DateTime(), nullable=True),
        sa.Column("value_json", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["field_id"], ["custom_field_definitions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_custom_field_value_entity",
        "custom_field_values",
        ["entity_type", "entity_id"],
        unique=False,
    )
    op.create_index(
        "idx_custom_field_value_field", "custom_field_values", ["field_id"], unique=False
    )
    op.create_table(
        "test_cases",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("key", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("objective", sa.Text(), nullable=True),
        sa.Column("precondition", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("priority_id", sa.String(length=50), nullable=True),
        sa.Column("priority_name", sa.String(length=100), nullable=True),
        sa.Column("folder_id", sa.String(length=50), nullable=True),
        sa.Column("folder_name", sa.String(length=255), nullable=True),
        sa.Column("owner", sa.String(length=100), nullable=True),
        sa.Column("owner_name", sa.String(length=255), nullable=True),
        sa.Column("component", sa.String(length=100), nullable=True),
        sa.Column("component_name", sa.String(length=255), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("version", sa.String(length=50), nullable=True),
        sa.Column("estimated_time", sa.Integer(), nullable=True),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["folder_id"], ["folders.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["priority_id"], ["priorities.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_test_case_folder", "test_cases", ["folder_id"], unique=False)
    op.create_index("idx_test_case_priority", "test_cases", ["priority_id"], unique=False)
    op.create_index("idx_test_case_project", "test_cases", ["project_key"], unique=False)
    op.create_index("idx_test_case_status", "test_cases", ["status"], unique=False)
    op.create_index(op.f("ix_test_cases_key"), "test_cases", ["key"], unique=True)
    op.create_table(
        "test_cycles",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("key", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("status_name", sa.String(length=100), nullable=True),
        sa.Column("folder_id", sa.String(length=50), nullable=True),
        sa.Column("folder_name", sa.String(length=255), nullable=True),
        sa.Column("owner", sa.String(length=100), nullable=True),
        sa.Column("owner_name", sa.String(length=255), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("planned_start_date", sa.DateTime(), nullable=True),
        sa.Column("planned_end_date", sa.DateTime(), nullable=True),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["folder_id"], ["folders.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_test_cycle_folder", "test_cycles", ["folder_id"], unique=False)
    op.create_index("idx_test_cycle_project", "test_cycles", ["project_key"], unique=False)
    op.create_index("idx_test_cycle_status", "test_cycles", ["status"], unique=False)
    op.create_index(op.f("ix_test_cycles_key"), "test_cycles", ["key"], unique=True)
    op.create_table(
        "test_plans",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("key", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("status_name", sa.String(length=100), nullable=True),
        sa.Column("folder_id", sa.String(length=50), nullable=True),
        sa.Column("folder_name", sa.String(length=255), nullable=True),
        sa.Column("owner", sa.String(length=100), nullable=True),
        sa.Column("owner_name", sa.String(length=255), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["folder_id"], ["folders.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_test_plan_folder", "test_plans", ["folder_id"], unique=False)
    op.create_index("idx_test_plan_project", "test_plans", ["project_key"], unique=False)
    op.create_index("idx_test_plan_status", "test_plans", ["status"], unique=False)
    op.create_index(op.f("ix_test_plans_key"), "test_plans", ["key"], unique=True)
    op.create_table(
        "case_label_association",
        sa.Column("test_case_id", sa.String(length=50), nullable=True),
        sa.Column("label_id", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(["label_id"], ["labels.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["test_case_id"], ["test_cases.id"], ondelete="CASCADE"),
    )
    op.create_index(
        "idx_case_label", "case_label_association", ["test_case_id", "label_id"], unique=False
    )
    op.create_table(
        "case_version_association",
        sa.Column("test_case_id", sa.String(length=50), nullable=True),
        sa.Column("version_id", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(["test_case_id"], ["test_cases.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["version_id"], ["case_versions.id"], ondelete="CASCADE"),
    )
    op.create_index(
        "idx_case_version", "case_version_association", ["test_case_id", "version_id"], unique=False
    )
    op.create_table(
        "script_files",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("filename", sa.String(length=255), nullable=False),
        sa.Column("type", sa.String(length=50), nullable=False),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("test_case_id", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["test_case_id"], ["test_cases.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_script_test_case", "script_files", ["test_case_id"], unique=False)
    op.create_table(
        "test_executions",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("test_case_key", sa.String(length=50), nullable=False),
        sa.Column("cycle_id", sa.String(length=50), nullable=False),
        sa.Column("cycle_name", sa.String(length=255), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("status_name", sa.String(length=100), nullable=True),
        sa.Column("environment_id", sa.String(length=50), nullable=True),
        sa.Column("environment_name", sa.String(length=100), nullable=True),
        sa.Column("executed_by", sa.String(length=100), nullable=True),
        sa.Column("executed_by_name", sa.String(length=255), nullable=True),
        sa.Column("executed_on", sa.DateTime(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("created_by", sa.String(length=100), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=True),
        sa.Column("updated_by", sa.String(length=100), nullable=True),
        sa.Column("actual_time", sa.Integer(), nullable=True),
        sa.Column("comment", sa.Text(), nullable=True),
        sa.Column("project_key", sa.String(length=50), nullable=False),
        sa.ForeignKeyConstraint(["cycle_id"], ["test_cycles.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["environment_id"], ["environments.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["project_key"], ["projects.key"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["test_case_key"], ["test_cases.key"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_test_execution_case", "test_executions", ["test_case_key"], unique=False)
    op.create_index("idx_test_execution_cycle", "test_executions", ["cycle_id"], unique=False)
    op.create_index(
        "idx_test_execution_environment", "test_executions", ["environment_id"], unique=False
    )
    op.create_index("idx_test_execution_project", "test_executions", ["project_key"], unique=False)
    op.create_index("idx_test_execution_status", "test_executions", ["status"], unique=False)
    op.create_table(
        "test_steps",
        sa.Column("id", sa.String(length=50), nullable=False),
        sa.Column("index", sa.Integer(), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("expected_result", sa.Text(), nullable=True),
        sa.Column("data", sa.Text(), nullable=True),
        sa.Column("actual_result", sa.Text(), nullable=True),
        sa.Column("status", sa.String(length=50), nullable=True),
        sa.Column("test_case_id", sa.String(length=50), nullable=True),
        sa.Column("test_execution_id", sa.String(length=50), nullable=True),
        sa.ForeignKeyConstraint(["test_case_id"], ["test_cases.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["test_execution_id"], ["test_executions.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("idx_step_index", "test_steps", ["index"], unique=False)
    op.create_index("idx_step_test_case", "test_steps", ["test_case_id"], unique=False)
    op.create_index("idx_step_test_execution", "test_steps", ["test_execution_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("idx_step_test_execution", table_name="test_steps")
    op.drop_index("idx_step_test_case", table_name="test_steps")
    op.drop_index("idx_step_index", table_name="test_steps")
    op.drop_table("test_steps")
    op.drop_index("idx_test_execution_status", table_name="test_executions")
    op.drop_index("idx_test_execution_project", table_name="test_executions")
    op.drop_index("idx_test_execution_environment", table_name="test_executions")
    op.drop_index("idx_test_execution_cycle", table_name="test_executions")
    op.drop_index("idx_test_execution_case", table_name="test_executions")
    op.drop_table("test_executions")
    op.drop_index("idx_script_test_case", table_name="script_files")
    op.drop_table("script_files")
    op.drop_index("idx_case_version", table_name="case_version_association")
    op.drop_table("case_version_association")
    op.drop_index("idx_case_label", table_name="case_label_association")
    op.drop_table("case_label_association")
    op.drop_index(op.f("ix_test_plans_key"), table_name="test_plans")
    op.drop_index("idx_test_plan_status", table_name="test_plans")
    op.drop_index("idx_test_plan_project", table_name="test_plans")
    op.drop_index("idx_test_plan_folder", table_name="test_plans")
    op.drop_table("test_plans")
    op.drop_index(op.f("ix_test_cycles_key"), table_name="test_cycles")
    op.drop_index("idx_test_cycle_status", table_name="test_cycles")
    op.drop_index("idx_test_cycle_project", table_name="test_cycles")
    op.drop_index("idx_test_cycle_folder", table_name="test_cycles")
    op.drop_table("test_cycles")
    op.drop_index(op.f("ix_test_cases_key"), table_name="test_cases")
    op.drop_index("idx_test_case_status", table_name="test_cases")
    op.drop_index("idx_test_case_project", table_name="test_cases")
    op.drop_index("idx_test_case_priority", table_name="test_cases")
    op.drop_index("idx_test_case_folder", table_name="test_cases")
    op.drop_table("test_cases")
    op.drop_index("idx_custom_field_value_field", table_name="custom_field_values")
    op.drop_index("idx_custom_field_value_entity", table_name="custom_field_values")
    op.drop_table("custom_field_values")
    op.drop_index("idx_status_type", table_name="statuses")
    op.drop_index("idx_status_project", table_name="statuses")
    op.drop_table("statuses")
    op.drop_index("idx_priority_rank", table_name="priorities")
    op.drop_index("idx_priority_project", table_name="priorities")
    op.drop_table("priorities")
    op.drop_index("idx_folder_project", table_name="folders")
    op.drop_index("idx_folder_parent", table_name="folders")
    op.drop_table("folders")
    op.drop_index("idx_environment_project", table_name="environments")
    op.drop_table("environments")
    op.drop_index("idx_custom_field_project", table_name="custom_field_definitions")
    op.drop_table("custom_field_definitions")
    op.drop_index(op.f("ix_projects_key"), table_name="projects")
    op.drop_table("projects")
    op.drop_index(op.f("ix_migration_state_project_key"), table_name="migration_state")
    op.drop_table("migration_state")
    op.drop_index("idx_link_entity", table_name="links")
    op.drop_table("links")
    op.drop_index(op.f("ix_labels_name"), table_name="labels")
    op.drop_table("labels")
    op.drop_index(op.f("ix_entity_batch_state_project_key"), table_name="entity_batch_state")
    op.drop_index("idx_entity_batch_status", table_name="entity_batch_state")
    op.drop_index("idx_entity_batch_project", table_name="entity_batch_state")
    op.drop_table("entity_batch_state")
    op.drop_table("case_versions")
    op.drop_index("idx_attachment_entity", table_name="attachments")
    op.drop_table("attachments")
    # ### end Alembic commands ###
